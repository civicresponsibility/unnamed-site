uwsgi_cache_path  /tmp/nginx-cache  levels=1:2 keys_zone=itf:100m inactive=72h max_size=1g;

# Redirect HTTP => HTTPS.
server {
	listen 80 default;
	listen [::]:80 default;
	rewrite /(.*) https://$host/$1 permanent;
	access_log off;
}

# Redirect non-canonical domains - hopefully we have a valid SSL certificate
# for them.
server {
	listen 443 ssl spdy default;
	listen [::]:443 ssl spdy default;
	ssl_certificate /etc/ssl/local/ssl_certificate.crt;
	ssl_certificate_key /etc/ssl/local/ssl_certificate.key;
	include /etc/nginx/nginx-ssl.conf;
	rewrite /(.*) https://if.then.fund/$1 permanent;
	access_log off;
}

# Primary servers - one server block per SSL certificate file, each serving as many
# server_names as the certificate file is appropriate for. All proxy to our port
# 8000 local-only server which handles uwsgi and caching.

server {
	listen 443 ssl spdy;
	listen [::]:443 ssl spdy;
 
	ssl_certificate /etc/ssl/local/ssl_certificate.crt;
	ssl_certificate_key /etc/ssl/local/ssl_certificate.key;
	include /etc/nginx/nginx-ssl.conf;
         	
	server_name if.then.fund;
	server_name staging.if.then.fund;
	server_name demo.if.then.fund;

	location / {
		proxy_pass http://127.0.0.1:8000;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}

server {
	listen 443 ssl spdy;
	listen [::]:443 ssl spdy;
 
	ssl_certificate /etc/ssl/local/demo279.then.fund/server.crt;
	ssl_certificate_key /etc/ssl/local/demo279.then.fund/server.key;
	include /etc/nginx/nginx-ssl.conf;
         	
	server_name demo279.then.fund;
	server_name demo279.then.fund:443;

	location / {
		proxy_pass http://127.0.0.1:8000;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}

# Workhorse.
server {
	listen 127.0.0.1:8000;

	root /home/ubuntu/public_html;

	# How to handle downtime: add a return 503.	
	error_page 503 @maintenance;
	location @maintenance {
		rewrite (.*) /static/maintenance.html last;
	}

	location / {
		#return 503; # maintenance mode activated
	
		include uwsgi_params;
		uwsgi_pass unix:///tmp/uwsgi_default.sock;

		uwsgi_read_timeout 40s;
		
		uwsgi_cache itf;
		uwsgi_cache_key "$scheme$request_method$host$request_uri";
		uwsgi_cache_valid 200 10m;
		uwsgi_cache_valid 301 5m;
		uwsgi_cache_valid 404 60s;
		uwsgi_cache_valid any 5s;
		uwsgi_cache_use_stale timeout invalid_header updating;
		uwsgi_no_cache $arg_nocache;
		uwsgi_cache_bypass $arg_nocache;
	}

	location /static/ {
		expires 7d;
	}

	# typical gzip compression
	gzip             on;
	gzip_min_length  1000;
	gzip_types       text/plain application/xml application/json text/css application/x-javascript;
	gzip_disable     "MSIE [1-6]\.";
	gzip_vary on;
}

